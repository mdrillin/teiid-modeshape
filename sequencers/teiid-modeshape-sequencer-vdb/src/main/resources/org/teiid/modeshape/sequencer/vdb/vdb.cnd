/*
 * JBoss, Home of Professional Open Source.
 * See the COPYRIGHT.txt file distributed with this work for information
 * regarding copyright ownership.  Some portions may be licensed
 * to Red Hat, Inc. under one or more contributor license agreements.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 * 02110-1301 USA.
 */
 
//------------------------------------------------------------------------------
// N A M E S P A C E S
//------------------------------------------------------------------------------

<nt  = "http://www.jcp.org/jcr/nt/1.0">
<xmi = "http://www.omg.org/XMI">
<vdb = "http://www.metamatrix.com/metamodels/VirtualDatabase">
<mmcore = "http://www.metamatrix.com/metamodels/Core">
<mode = "http://www.modeshape.org/1.0">

//------------------------------------------------------------------------------
// N O D E T Y P E S
//------------------------------------------------------------------------------

[vdb:virtualDatabase] > nt:unstructured, mode:hashed
 - vdb:name (string)
 - vdb:description (string) 
 - vdb:version (long) = '1' autocreated
 - vdb:preview (boolean) = 'false' autocreated
 - vdb:connectionType (string)
 - vdb:originalFile (string)
 + vdb:translators (vdb:translators) copy
 + vdb:dataRoles (vdb:dataRoles) copy
 + vdb:entries (vdb:entries) copy
 + vdb:importVdbs (vdb:importVdbs) copy
 + vdb:resources (vdb:resources) copy // udf jars or other files contained in the VDB /lib directory

[vdb:abstractModel] mixin
 - vdb:description (string)
 - vdb:visible (boolean) = 'true' autocreated
 - vdb:pathInVdb (string)
 + vdb:sources (vdb:sources) = vdb:sources copy

// name is the node name (xmi models)
[vdb:model] > vdb:abstractModel, mmcore:model
 - vdb:checksum (long)
 - vdb:builtIn (boolean) = 'false' autocreated
 + vdb:markers (vdb:markers) = vdb:markers copy

// model name is the node name
[vdb:declarativeModel] > nt:unstructured, vdb:abstractModel, mix:referenceable
 - mmcore:modelType (string) = 'PHYSICAL' autocreated < 'PHYSICAL','VIRTUAL'
 - vdb:metadataType (string) = 'DDL' autocreated
 - vdb:modelDefinition (string)
 - vdb:ddlFileEntryPath (string) // if DDL-FILE metadata type, the path in the VDB of the DDL file

[vdb:sources] > nt:unstructured
 + vdb:source (vdb:source) = vdb:source copy sns

// source name is the node name
[vdb:source] > nt:unstructured
 - vdb:sourceTranslator (string)
 - vdb:sourceJndiName (string)

[vdb:markers] > nt:unstructured
 + vdb:marker (vdb:marker) = vdb:marker copy sns

[vdb:marker] > nt:unstructured
 - vdb:severity (string) = 'WARNING' autocreated < 'WARNING','ERROR','INFO'
 - vdb:path (string) // if no value then marker is for model
 - vdb:message (string) mandatory
 
[vdb:translators] > nt:unstructured
 + vdb:translator (vdb:translator) copy
 
 // translator name is node name
[vdb:translator] > nt:unstructured
 - vdb:type (string) mandatory
 - vdb:description (string)
 
[vdb:dataRoles] > nt:unstructured
 + vdb:dataRole (vdb:dataRole) copy

// data role name is node name 
[vdb:dataRole] > nt:unstructured
 - vdb:description (string)
 - vdb:anyAuthenticated (boolean) = 'false' autocreated
 - vdb:allowCreateTemporaryTables (boolean) = 'false' autocreated
 - vdb:grantAll (boolean) = 'false' autocreated
 - vdb:mappedRoleNames (string) multiple
 + vdb:permissions (vdb:permissions) = vdb:permissions copy

[vdb:entries] > nt:unstructured
 + vdb:vdbEntry (vdb:entry) copy sns
 
[vdb:entry] > nt:unstructured
 - vdb:path (string) mandatory
 - vdb:description (string)

[vdb:resources] > nt:unstructured
 + * (nt:file) copy

[vdb:permissions] > nt:unstructured
 + vdb:permission (vdb:permission) copy

// permission resource path is node path
[vdb:permission] > nt:unstructured
 - vdb:allowCreate (boolean) = 'false' autocreated
 - vdb:allowRead (boolean) = 'false' autocreated
 - vdb:allowUpdate (boolean) = 'false' autocreated
 - vdb:allowDelete (boolean) = 'false' autocreated
 - vdb:allowExecute (boolean) = 'false' autocreated
 - vdb:allowAlter (boolean) = 'false' autocreated
 - vdb:allowLanguage (boolean) = 'false' autocreated
 + vdb:conditions (vdb:conditions) = vdb:conditions copy
 + vdb:masks (vdb:masks) = vdb:masks copy

[vdb:conditions] > nt:unstructured
 + vdb:condition (vdb:condition) copy

[vdb:condition] > nt:unstructured
 - vdb:constraint (boolean) = 'true' autocreated

[vdb:masks] > nt:unstructured
 + vdb:mask (vdb:mask) copy

[vdb:mask] > nt:unstructured
 - vdb:order (string)

// group node for the VDBs that are imported by a VDB
[vdb:importVdbs] > nt:unstructured
 + vdb:importVdb (vdb:importVdb) copy
 
// imported VDB name is node path
[vdb:importVdb] > nt:unstructured
 - vdb:version (long) mandatory
 - vdb:importDataPolicies (boolean)= 'true' autocreated
