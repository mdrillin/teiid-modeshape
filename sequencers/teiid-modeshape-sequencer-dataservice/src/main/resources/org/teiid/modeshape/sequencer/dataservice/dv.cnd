/*
 * JBoss, Home of Professional Open Source.
 * See the COPYRIGHT.txt file distributed with this work for information
 * regarding copyright ownership.  Some portions may be licensed
 * to Red Hat, Inc. under one or more contributor license agreements.
 * 
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 * 02110-1301 USA.
 */

//------------------------------------------------------------------------------
// N A M E S P A C E S
//------------------------------------------------------------------------------

<dv  = "http://www.jboss.org/dv/1.0">
<nt  = "http://www.jcp.org/jcr/nt/1.0">

//------------------------------------------------------------------------------
// NODE TYPES
//------------------------------------------------------------------------------

/*
 * A driver file.
 */
[dv:driverFile] > nt:file, mix:referenceable

/*
 * A metadata file (DDL).
 */
[dv:metadataFile] > nt:file, mix:referenceable abstract
[dv:ddlFile] > dv:metadataFile

/*
 * A resource file (UDF).
 */
[dv:resourceFile] > nt:file, mix:referenceable
[dv:udfFile] > dv:resourceFile
   
/*
 * A connection.
 */
[dv:connection] > nt:unstructured, mix:referenceable
  - dv:type (string) < 'JDBC','RESOURCE'
  - dv:jndiName (string)
  - dv:className (string) // driver class name
  - dv:driverName (string) // file name of where driver is located

/*
 * A data service archive entry.
 */
[dv:dataServiceEntry] > nt:unstructured abstract
  - dv:path (string)
  - dv:sourceResource (reference) // reference to resource being put in the archive

/*
 * A data service archive.
 */
[dv:dataService] > nt:unstructured
  - dv:description (string)
  - dv:lastModified (date)
  - dv:modifiedBy (string)
  + * (dv:dataServiceEntry) copy
  
/*
 * A data service archive import VDB entry.
 */
[dv:vdbEntry] > dv:dataServiceEntry // reference to a vdb:virtualDatabase
  - dv:vdbName (string)
  - dv:vdbVersion (string)

/*
 * A data service archive service VDB entry.
 */
[dv:serviceVdbEntry] > dv:vdbEntry // reference to a vdb:virtualDatabase
  + * (dv:vdbEntry) copy // references to dv:vdbEntry dependent VDBs

/*
 * A data service archive connection entry.
 */
[dv:connectionEntry] > dv:dataServiceEntry // reference to a dv:connection
  - dv:jndiName (string)

/*
 * A data service archive driver file entry.
 */
[dv:driverEntry] > dv:dataServiceEntry // reference to a dv:driverFile

/*
 * A data service archive metadata file entry. For example, a DDL file. 
 */
[dv:metadataEntry] > dv:dataServiceEntry abstract
[dv:ddlEntry] > dv:metadataEntry // reference to a dv:metadataFile

/*
 * A data service archive resource file entry. For example, a UDF file.
 */
[dv:resourceEntry] > dv:dataServiceEntry // reference to a dv:resourceFile
[dv:udfEntry] > dv:resourceEntry // reference to a dv:udfFile
